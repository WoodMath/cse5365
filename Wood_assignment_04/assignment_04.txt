Purpose:  Practice in perspective projection and clippingAdd perspective projection to your previous assignment and include multiple cameras. This assignmentmust include parallel and perspective projections and clippings.When you start your program it should automatically read a file called "cameras_04.txt". This filecontains the information about the cameras. Notice that "cameras_04.txt' file may include informationabout multiple cameras. 

Detail format of the cameras.txt file:

c       // Start the definition of a new camera.

i  camera_name  //Name of the camera. Default=""

t Parallel / Perspective  // Define camera type. Default= parallel

r <x> <y> <z>   //Define VRP (WC). Default= 0,0,0

n <x> <y> <z>  //Define VPN (WC). Default = 0,0,1

u <x> <y> <z>  //Define VUP (WC). Default=0,1,0

p <x> <y> <z>  //Define PRP (VRC). Default=0,0,1

w <umin><umax><vmin><vnax><nmin><nmax>    //Define View Volume (VRC). Default= -1 , 1, -1, 1, -1, 1

s <xmin><ymin><xmax><ymax.    //Define viewport (normalized coordinates). Default=0.1, 0.1, 0.4, 0.4

// Definition of another camera may start here

c      // Start the definition of another new camera

.....

..... 

Notes:
    "c" line is required and it marks the start of a new camera definition

    If any of the parameters are missing then the default value should be used.

    Boundaries of the viewports must be displayed.

    Viewports may be overlapping.

    Your program must display all the viewports (for all the cameras) simultaneously.


In addition to reading the camera.txt file, your program should include the following commands

     Browse (Same as previous assignment)

    This command should allow the user to select an input file .

    Load (Open) Input File (Same as previous assignment)

    This command loads all the data and parameters from the input text file and displays the objects using parallel and perspective projections for multiple cameras. All objects should be clipped in 3-d and displayed in the viewport. Each line of the file will contain  either a vertex, a  face, or a viewing parameter definition as described below. Notice that the data file for the assignment 04 is different from the dta file for the assignment 03 because it does not include the camera viewing (camera) parameters:

    Rotate around x axis by D degrees in N incremental steps (Same as previous assignment)

    This command rotates all the objects around line x axis by D degrees in N incremental steps. The intermediate results  should be  displayed

    Rotate around y axis by D degrees in N incremental steps (Same as previous assignment)

    This command rotates all the objects around line y axis by D degrees in N incremental steps. The intermediate results  should be  displayed

    Rotate around z axis  by D degrees in N incremental steps (Same as previous assignment)

    This command rotates all the objects around line z axis by D degrees in N incremental steps. The intermediate results  should be  displayed

    Scale Sx, Sy, Sz around point Ax,Ay,Az in  N incremental steps (Same as previous assignment)

    This command scales all the objectsaround point A(x,y,z)  by Sx, Sy, and Sz in N incremental steps. The intermediate results should be  displayed

    Translate Tx, Ty, Tz, N (Same as previous assignment)

    This command translates all the objects by Tx, Ty, and Tz in N incremental steps. The intermediate results should be displayed

    FLY (Same as previous assignment)

    This command moves VRP of the first camera from Point A to point B in N incremental steps. VPN and VUP should stay the same. The intermediate results should be displayed. 

Detail format of the input file:

v <x1> <y1> <z1>  //Define a vertex

v <x2> <y2> <z2>

.

.

.

v <xn> <yn> <zn>

f <u1> <v1> <w1> //Define a face (u,v, and w are integers)

f <u2> <v2> <w2>

.

.

.

f <um> <vm> <wm>

Notes:
        Each "v" line defines a new vertex with the given x,y,z coordinates.

        Each vertex is given a unique identifier starting from 1 (not 0).


Sahmple input files:
    Cameras

    Pyramid

   Cow

    Bunny

    Teapot

    Teapot lid


Demo solution for Assignment 04

 Assignment 04 (Due date Apr. 19, 2016)


